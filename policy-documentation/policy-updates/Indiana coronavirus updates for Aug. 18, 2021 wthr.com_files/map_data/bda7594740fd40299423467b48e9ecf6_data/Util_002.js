// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define(["exports","../../core/has","../../core/maybe"],function(h,q,p){function l(a){return a[0].stride}function m(a){switch(a){case 6406:case 6409:case 36168:return 1;case 6410:case 32854:case 33325:case 32854:case 33189:return 2;case 6407:case 6402:return 3;case 6408:case 34041:case 33326:case 35898:case 33327:case 34041:return 4;case 33328:case 34842:return 8;case 34836:return 16;case 33776:case 33777:return.5;case 33778:case 33779:return 1;case 37488:case 37489:case 37492:case 37493:case 37494:case 37495:return.5;
case 37490:case 37491:case 37496:case 37497:return 1}return 0}function n(a){if(p.isNone(a))return 0;if("descriptor"in a)return a.glName?n(a.descriptor):0;const g=a.internalFormat||"pixelFormat"in a&&a.pixelFormat;if(!g)return 0;const e="hasMipmap"in a&&a.hasMipmap?1.3:1;a=a.width*a.height;return m(g)*a*e}h.bindVertexBufferLayout=function(a,g,e,c,k){const f=a.gl,d=a.capabilities.instancing;a.bindBuffer(e);for(const b of c)if(a=g.get(b.name),void 0===a&&console.error(`There is no location for vertex attribute '${b.name}' defined.`),
b.baseInstance&&!b.divisor&&console.error(`Vertex attribute '${b.name}' uses baseInstanceOffset without divisor.`),e=(k?k:0+b.baseInstance?b.baseInstance:0)*b.stride,4>=b.count)f.vertexAttribPointer(a,b.count,b.type,b.normalized,b.stride,b.offset+e),f.enableVertexAttribArray(a),0<b.divisor&&d&&d.vertexAttribDivisor(a,b.divisor);else if(9===b.count)for(c=0;3>c;c++)f.vertexAttribPointer(a+c,3,b.type,b.normalized,b.stride,b.offset+12*c+e),f.enableVertexAttribArray(a+c),0<b.divisor&&d&&d.vertexAttribDivisor(a+
c,b.divisor);else if(16===b.count)for(c=0;4>c;c++)f.vertexAttribPointer(a+c,4,b.type,b.normalized,b.stride,b.offset+16*c+e),f.enableVertexAttribArray(a+c),0<b.divisor&&d&&d.vertexAttribDivisor(a+c,b.divisor);else console.error("Unsupported vertex attribute element count: "+b.count)};h.getBytesPerElementFormat=m;h.getGpuMemoryUsage=n;h.getStride=l;h.unbindVertexBufferLayout=function(a,g,e,c){const k=a.gl,f=a.capabilities.instancing;a.bindBuffer(e);for(const d of c)if(e=g.get(d.name),4>=d.count)k.disableVertexAttribArray(e),
d.divisor&&0<d.divisor&&f&&f.vertexAttribDivisor(e,0);else if(9===d.count)for(c=0;3>c;c++)k.disableVertexAttribArray(e+c),d.divisor&&0<d.divisor&&f&&f.vertexAttribDivisor(e+c,0);else if(16===d.count)for(c=0;4>c;c++)k.disableVertexAttribArray(e+c),d.divisor&&0<d.divisor&&f&&f.vertexAttribDivisor(e+c,0);else console.error("Unsupported vertex attribute element count: "+d.count);a.unbindBuffer(34962)};h.vertexCount=function(a,g){return a.vertexBuffers[g].size/l(a.layout[g])};Object.defineProperty(h,"__esModule",
{value:!0})});