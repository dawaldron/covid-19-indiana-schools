// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/mathUtils ../../../core/maybe ../../../chunks/vec2 ../../../chunks/vec2f64 ./SnappingAlgorithm ./SnappingConstraint ./snappingUtils ./candidates/RightAngleSnappingCandidate".split(" "),function(t,v,w,x,k,n,p,y,m,z){p=function(u){function q(){var d=u.apply(this,arguments)||this;d._tmp=n.create();return d}v._inheritsLoose(q,u);var r=q.prototype;r.snapNewVertex=function(d,b){var c=b.geometry.editGeometry.components[0],a=c.vertices.length;
const e=[];if(2>a)return e;const g=m.anyMapPointToScreenPoint(d,b.coordinateHelper,b.elevationInfo,this.view);a=c.vertices[a-1];this._checkForSnappingCandidate(e,a.left,a.pos,d,a.left.left.pos,a.pos,b,d,g);c=c.vertices[0];this._checkForSnappingCandidate(e,c.right,c.pos,d,c.right.right.pos,c.pos,b,d,g);return e};r.snapExistingVertex=function(d,b){const c=[];var a=x.unwrap(b.vertexHandle),e=a.component;const g=e.vertices.length;if(3>g)return c;const h=m.anyMapPointToScreenPoint(d,b.coordinateHelper,
b.elevationInfo,this.view);var f=a.left;a=a.right;const l=e.vertices[0];e=e.vertices[g-1];if(!f)return this._checkForSnappingCandidate(c,l.right.right.right,l.right.right.pos,d,l.right.right.right.right.pos,l.right.right.pos,b,d,h),c;if(!a)return this._checkForSnappingCandidate(c,e.left.left.left,e.left.left.pos,d,e.left.left.left.left.pos,e.left.left.pos,b,d,h),c;f&&f.left.left&&(e=f.left.left,this._checkForSnappingCandidate(c,e,f.left.pos,d,e.left.pos,f.left.pos,b,d,h));a&&a.right.right&&(f=a.right.right,
this._checkForSnappingCandidate(c,f,a.right.pos,d,f.right.pos,a.right.pos,b,d,h));return c};r._checkForSnappingCandidate=function(d,b,c,a,e,g,h,f,l){this.edgeExceedsShortLineThreshold(b,h)&&(k.subtract(this._tmp,b.right.pos,b.left.pos),b=n.fromValues(this._tmp[1],-this._tmp[0]),c=k.dot(b,k.subtract(this._tmp,a,c))/k.squaredLength(b),a=h.coordinateHelper,f=a.fromXYZ(k.scaleAndAdd(n.create(),g,b,c),a.getZ(f,0)),m.squareDistance(l,m.anyMapPointToScreenPoint(f,a,h.elevationInfo,this.view))<this.squaredProximityTreshold(h.pointer)&&
d.push(new z.RightAngleSnappingCandidate({coordinateHelper:a,targetPoint:f,constraint:new y.RayConstraint(a,g,k.scaleAndAdd(a.createNew(),g,b,w.sign(c))),previousVertex:e,otherVertex:g,otherVertexType:1})))};return q}(p.SnappingAlgorithm);t.RightAngleSnapper=p;Object.defineProperty(t,"__esModule",{value:!0})});