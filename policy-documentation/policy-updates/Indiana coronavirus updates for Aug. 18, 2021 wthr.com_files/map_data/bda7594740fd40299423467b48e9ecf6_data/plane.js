// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../core/mathUtils ../../core/maybe ../../chunks/vec3 ../../chunks/vec3f64 ../../chunks/sphere ./vectorStacks".split(" "),function(d,H,I,e,q,z,l){function t(a=A){return[a[0],a[1],a[2],a[3]]}function B(a,b=t()){return x(a[0],a[1],a[2],a[3],b)}function x(a,b,c,f,g=t()){g[0]=a;g[1]=b;g[2]=c;g[3]=f;return g}function C(a,b,c){e.copy(c,b);b=e.dot(b,b);1E-5<Math.abs(b-1)&&1E-12<b&&e.scale(c,c,1/Math.sqrt(b));return D(c,a,c)}function E(a,b,c,f=t()){return F(e.subtract(l.sv3d.get(),a,b),
e.subtract(l.sv3d.get(),c,b),a,f)}function y(a,b,c,f,g){if(3>a.count)return!1;a.getVec(c,r);let h=f,k=!1;for(;h<a.count-1&&!k;)a.getVec(h,n),h++,k=!e.exactEquals(r,n);if(!k)return!1;h=Math.max(h,g);for(k=!1;h<a.count&&!k;)a.getVec(h,p),h++,e.subtract(u,r,n),e.normalize(u,u),e.subtract(v,n,p),e.normalize(v,v),k=!e.exactEquals(r,p)&&!e.exactEquals(n,p)&&.99619469809>Math.abs(e.dot(u,v));if(!k)return 0===c&&1===f&&2===g?!1:y(a,b,0,1,2);E(r,n,p,b);return!0}function D(a,b,c){a!==c&&B(a,c);c[3]=-e.dot(c,
b);return c}function F(a,b,c,f){a=e.cross(p,b,a);return C(c,a,f)}function G(a,b,c){a=e.scale(l.sv3d.get(),a,e.dot(a,b));e.subtract(c,b,a);return c}function m(a,b){return e.dot(a,b)+a[3]}function w(a,b,c,f,g){const h=e.dot(a,c);if(0===h)return!1;a=-(e.dot(a,b)+a[3])/h;f&1&&(a=H.clamp(a,0,1));if(!(f&4)&&0>a||!(f&8)&&1<a)return!1;e.add(g,b,e.scale(g,c,a));return!0}const r=q.create(),n=q.create(),p=q.create(),u=q.create(),v=q.create(),A=[0,0,1,0];d.UP=A;d.clip=function(a,b){const c=e.dot(a,b.ray.direction);
a=-m(a,b.ray.origin);if(0>a&&0<=c)return!1;if(-1E-6<c&&1E-6>c)return 0<a;if((0>a||0>c)&&!(0>a&&0>c))return!0;a/=c;0<c?a<b.c1&&(b.c1=a):a>b.c0&&(b.c0=a);return b.c0<=b.c1};d.clipInfinite=function(a,b){const c=e.dot(a,b.ray.direction);a=-m(a,b.ray.origin);if(-1E-6<c&&1E-6>c)return 0<a;a/=c;0<c?a<b.c1&&(b.c1=a):a>b.c0&&(b.c0=a);return b.c0<=b.c1};d.copy=B;d.create=t;d.distance=function(a,b){return Math.abs(m(a,b))};d.fromManyPoints=function(a,b){return y(a,b,0,1,2)};d.fromManyPointsSampleAt=y;d.fromNormalAndOffset=
function(a,b,c){e.copy(c,a);c[3]=b;return c};d.fromPoints=E;d.fromPositionAndNormal=C;d.fromValues=x;d.fromVectorsAndPoint=F;d.intersectLine=function(a,b,c,f){c=e.subtract(l.sv3d.get(),c,b);return w(a,b,c,12,f)};d.intersectLineSegment=function(a,b,c){return w(a,b.origin,b.vector,0,c)};d.intersectLineSegmentClamp=function(a,b,c){return w(a,b.origin,b.vector,1,c)};d.intersectRay=function(a,b,c){return I.isSome(b)?w(a,b.origin,b.direction,8,c):!1};d.isAABBFullyInside=function(a,b){const c=b[0],f=b[1],
g=b[2],h=b[3],k=b[4];b=b[5];return 0<=a[0]*(0<a[0]?c:h)+a[1]*(0<a[1]?f:k)+a[2]*(0<a[2]?g:b)+a[3]};d.isPointInside=function(a,b){return 0<=m(a,b)};d.isPointOutside=function(a,b){return 0>m(a,b)};d.isSphereFullyInside=function(a,b){return 0<=m(a,z.getCenter(b))-b[3]};d.isSphereFullyOutside=function(a,b){return 0>m(a,z.getCenter(b))+b[3]};d.negate=function(a,b){b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=-a[3];return b};d.normal=function(a){return a};d.projectPoint=function(a,b,c){const f=e.scale(l.sv3d.get(),
a,-a[3]);b=e.subtract(l.sv3d.get(),b,f);a=G(a,b,l.sv3d.get());e.add(c,a,f);return c};d.projectVector=G;d.setOffsetFromPoint=D;d.signedDistance=m;d.wrap=function(a,b,c,f){return x(a,b,c,f,l.sv4d.get())};Object.defineProperty(d,"__esModule",{value:!0})});