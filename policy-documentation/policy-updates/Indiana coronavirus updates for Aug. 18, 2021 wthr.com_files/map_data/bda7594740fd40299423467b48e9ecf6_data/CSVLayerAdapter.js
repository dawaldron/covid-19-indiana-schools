// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Error ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../rest/support/generateRendererUtils ../../statistics/support/utils ../utils ./FeatureLayerAdapter ./support/utils".split(" "),function(r,x,t,m,D,E,F,G,y,u,z,A,B,n){function v(k){return"esri.rest.support.ClassBreaksDefinition"===
k.declaredClass}function w(k){return"esri.rest.support.UniqueValueDefinition"===k.declaredClass}m=function(k){function p(c){return k.call(this,c)||this}r._inheritsLoose(p,k);var q=p.prototype;q._createGenerateRendererResult=function(){var c=r._asyncToGenerator(function*(b,a,f,g,d){const e=b&&b.features;if(!e||!e.length)throw new t("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");b=null;if("percent-of-total"===g&&(b=(yield n.calculateStatsFromMemory({field:a},
e)).sum,null==b))throw new t("csv-layer-adapter:invalid","invalid normalizationTotal");if(v(d))return a=(yield n.getDataValues({field:a,normalizationType:g,normalizationField:f,normalizationTotal:b},e)).filter(h=>Number.isFinite(h)),u.createGenerateRendererClassBreaks({definition:d,values:a,normalizationTotal:b});if(w(d))return d=(yield n.getDataValues({field:a},e)).filter(h=>null!=h&&"string"===typeof h&&""!==h.trim()),u.createGenerateRendererUniqueValues(d)});return function(b,a,f,g,d){return c.apply(this,
arguments)}}();q.generateRenderer=function(c,b){const a=c.classificationDefinition;let f=null,g=null,d=null;v(a)?(f=a.classificationField,g=a.normalizationField,d=a.normalizationType):w(a)&&(f=a.attributeField);const e=this.layer;return A.getFieldsList({field:f,normalizationField:g}).then(h=>{const l=e.createQuery();l.returnGeometry=!1;l.outFields=h;l.where=z.mergeWhereClauses(l.where,c.where);return e.queryFeatures(l,{signal:b}).then(C=>this._createGenerateRendererResult(C,f,g,d,a))})};q.load=function(c){c=
this.layer.load(c).then(b=>{this.geometryType=b.geometryType;this.objectIdField=b.objectIdField;this.supportsSQLExpression=!0;this._hasLocalSource=!1;this.hasQueryEngine=!0});this.addResolvingPromise(c);return Promise.resolve(this)};return p}(B);return m=x.__decorate([y.subclass("esri.smartMapping.support.adapters.CSVLayerAdapter")],m)});