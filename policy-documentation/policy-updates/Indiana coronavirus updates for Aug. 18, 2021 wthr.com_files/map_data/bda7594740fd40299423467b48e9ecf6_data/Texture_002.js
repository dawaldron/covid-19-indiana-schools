// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define(["../../chunks/_rollupPluginBabelHelpers","../../core/mathUtils","../../core/maybe","./enums","./capabilities/isWebGL2Context"],function(t,n,p,q,u){let r=function(){function g(a,b,d=null){this._context=a;this.type="texture";this._glName=null;this._descriptor=void 0;this._wrapModeDirty=this._samplingModeDirty=!1;a.instanceCounter.increment(q.ResourceType.Texture,this);this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,
...b};this.setData(d)}var l=g.prototype;l.dispose=function(){this._context.gl&&this._glName&&(this._context.unbindTextureAllUnits(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(q.ResourceType.Texture,this))};l.release=function(){this.dispose()};l.resize=function(a,b){const d=this._descriptor;if(d.width!==a||d.height!==b)d.width=a,d.height=b,this.setData(null)};l.setData=function(a){if(this._context&&this._context.gl){var b=this._context.gl;
this._glName||(this._glName=b.createTexture());void 0===a&&(a=null);null===a&&(this._descriptor.width=this._descriptor.width||4,this._descriptor.height=this._descriptor.height||4);var d=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES),c=this._descriptor;g._validateTexture(this._context,c);b.pixelStorei(b.UNPACK_ALIGNMENT,c.unpackAlignment);b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,c.flipped?1:0);b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.preMultiplyAlpha?1:0);var h=c.pixelFormat,k=c.internalFormat?
c.internalFormat:h;if(a instanceof ImageData||a instanceof HTMLImageElement||a instanceof HTMLCanvasElement||a instanceof HTMLVideoElement){var f=a.width,e=a.height;a instanceof HTMLVideoElement&&(f=a.videoWidth,e=a.videoHeight);b.texImage2D(b.TEXTURE_2D,0,k,h,c.dataType,a);c.hasMipmap&&this.generateMipmap();void 0===c.width&&(c.width=f);void 0===c.height&&(c.height=e)}else{null!=c.width&&null!=c.height||console.error("Width and height must be specified!");b.DEPTH24_STENCIL8&&k===b.DEPTH_STENCIL&&
(k=b.DEPTH24_STENCIL8);f=c.width;e=c.height;var m=a;if(p.isSome(m)&&"type"in m&&"compressed"===m.type)for(h=Math.round(Math.log(Math.max(f,e))/Math.LN2)+1,c.hasMipmap=c.hasMipmap&&h===a.levels.length,h=0;;++h){b.compressedTexImage2D(b.TEXTURE_2D,h,k,f,e,0,a.levels[Math.min(h,a.levels.length-1)]);if(1===f&&1===e||!c.hasMipmap)break;f=Math.max(1,f>>1);e=Math.max(1,e>>1)}else if(p.isSome(a))b.texImage2D(b.TEXTURE_2D,0,k,f,e,0,h,c.dataType,a),c.hasMipmap&&this.generateMipmap();else for(a=0;;++a){b.texImage2D(b.TEXTURE_2D,
a,k,f,e,0,h,c.dataType,null);if(1===f&&1===e||!c.hasMipmap)break;f=Math.max(1,f>>1);e=Math.max(1,e>>1)}}g._applySamplingMode(b,this._descriptor);g._applyWrapMode(b,this._descriptor);g._applyAnisotropicFilteringParameters(this._context,this._descriptor);this._context.bindTexture(d,g.TEXTURE_UNIT_FOR_UPDATES)}};l.updateData=function(a,b,d,c,h,k){k||console.error("An attempt to use uninitialized data!");this._glName||console.error("An attempt to update uninitialized texture!");const f=this._context.gl,
e=this._descriptor,m=this._context.bindTexture(this,g.TEXTURE_UNIT_FOR_UPDATES);(0>b||0>d||c>e.width||h>e.height||b+c>e.width||d+h>e.height)&&console.error("An attempt to update out of bounds of the texture!");f.pixelStorei(f.UNPACK_ALIGNMENT,e.unpackAlignment);f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,e.flipped?1:0);f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.preMultiplyAlpha?1:0);k instanceof ImageData||k instanceof HTMLImageElement||k instanceof HTMLCanvasElement||k instanceof HTMLVideoElement?
f.texSubImage2D(f.TEXTURE_2D,a,b,d,e.pixelFormat,e.dataType,k):f.texSubImage2D(f.TEXTURE_2D,a,b,d,c,h,e.pixelFormat,e.dataType,k);this._context.bindTexture(m,g.TEXTURE_UNIT_FOR_UPDATES)};l.generateMipmap=function(){var a=this._descriptor;a.hasMipmap||(this._samplingModeDirty=a.hasMipmap=!0,g._validateTexture(this._context,a));9729===a.samplingMode?(this._samplingModeDirty=!0,a.samplingMode=9985):9728===a.samplingMode&&(this._samplingModeDirty=!0,a.samplingMode=9984);a=this._context.bindTexture(this,
g.TEXTURE_UNIT_FOR_UPDATES);const b=this._context.gl;b.generateMipmap(b.TEXTURE_2D);this._context.bindTexture(a,g.TEXTURE_UNIT_FOR_UPDATES)};l.setSamplingMode=function(a){a!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=a,this._samplingModeDirty=!0)};l.setWrapMode=function(a){a!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=a,g._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)};l.applyChanges=function(){const a=this._context.gl,b=this._descriptor;this._samplingModeDirty&&
(g._applySamplingMode(a,b),this._samplingModeDirty=!1);this._wrapModeDirty&&(g._applyWrapMode(a,b),this._wrapModeDirty=!1)};g._validateTexture=function(a,b){(0>b.width||0>b.height)&&console.error("Negative dimension parameters are not allowed!");const d=n.isPowerOfTwo(b.width)&&n.isPowerOfTwo(b.height);u(a.gl)||d||("number"===typeof b.wrapMode?33071!==b.wrapMode&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):(33071!==b.wrapMode.s||33071!==b.wrapMode.t)&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),
b.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))};g._applySamplingMode=function(a,b){let d=b.samplingMode,c=b.samplingMode;if(9985===d||9987===d)d=9729,b.hasMipmap||(c=9729);else if(9984===d||9986===d)d=9728,b.hasMipmap||(c=9728);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,d);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,c)};g._applyWrapMode=function(a,b){"number"===typeof b.wrapMode?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,b.wrapMode),a.texParameteri(a.TEXTURE_2D,
a.TEXTURE_WRAP_T,b.wrapMode)):(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,b.wrapMode.s),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,b.wrapMode.t))};g._applyAnisotropicFilteringParameters=function(a,b){var d;const c=a.capabilities.textureFilterAnisotropic;c&&(a=a.gl,a.texParameterf(a.TEXTURE_2D,c.TEXTURE_MAX_ANISOTROPY,null!=(d=b.maxAnisotropy)?d:1))};t._createClass(g,[{key:"glName",get:function(){return this._glName}},{key:"descriptor",get:function(){return this._descriptor}}]);return g}();r.TEXTURE_UNIT_FOR_UPDATES=
0;return r});