define("bem",[],function(){"use strict";return function(e,t){const c=this;this.baseEl=new function(t,e){try{var r,n;return(!(e=e||t.parentNode)&&t.ownerDocument&&(t!==t.ownerDocument.documentElement&&"DocumentFragment"!==t.ownerDocument.constructor.name||(e=t.ownerDocument)),e)?(t.setAttribute("wrapNodeList",""),r=e.querySelectorAll("[wrapNodeList]"),t.removeAttribute("wrapNodeList"),r):((n=document.createDocumentFragment()).appendChild(t),r=n.childNodes)}catch(e){return void 0,t}}(e),this.currentEl=this.baseEl,this.currentBlockName=t,this.currentElementName=null,this.currentModifierName=null,this.currentModifierValue=null,this.selectBlock=()=>(this.currentElementName=null,this.currentModifierName=null,this.currentModifierValue=null,this.currentEl=this.baseEl,c),this.getSelectedElements=()=>(this.currentModifierName=null,this.currentModifierValue=null,this.currentEl=this.baseEl[0].querySelectorAll(`.${this.currentBlockName}__${this.currentElementName}`),this.currentEl),this.selectElements=(e,t)=>(this.selectBlock(),this.currentElementName=e,this.currentEl=l(this.currentEl,`.${this.currentBlockName}__${e}`),"function"==typeof t&&this.currentEl.forEach(e=>{t(e,c)}),c),this.selectElementsWithModifier=(e,t,r,n)=>(r=r.toString(),this.selectBlock(),this.currentElementName=e,this.currentModifierName=t,this.currentModifierValue=r,null!=t?(null==r&&(r="true"),this.currentEl=l(this.currentEl,`.${this.currentBlockName}__${e}_${t}_${r}`)):this.currentEl=l(this.currentEl,`.${this.currentBlockName}__${e}`),"function"==typeof n&&this.currentEl.forEach(e=>{n(e,c)}),c),this.each=t=>{this.currentEl.forEach(e=>{t(e,c)})},this.removeModifier=r=>{null!==c.currentElementName?c.currentEl.forEach(t=>{t.classList.forEach(e=>{e.startsWith(`${c.currentBlockName}__${c.currentElementName}_${r}_`)&&t.classList.remove(e)})}):c.currentEl.forEach(t=>{t.classList.forEach(e=>{e.startsWith(`${c.currentBlockName}_${r}_`)&&t.classList.remove(e)})})},this.setModifier=(t,r)=>{r=r.toString(),c.currentModifierName=t,c.currentModifierValue=r,c.removeModifier(t),null!==c.currentElementName?c.currentEl.forEach(e=>{e.classList.add(`${c.currentBlockName}__${c.currentElementName}_${t}_${r}`)}):c.currentEl.forEach(e=>{e.classList.add(`${c.currentBlockName}_${t}_${r}`)})};const l=(e,t)=>{let r=[];return Array.prototype.forEach.call(e,e=>{e=e.querySelectorAll(t),e=Array.from(e);r.push.apply(r,e)}),r}}});
//# sourceMappingURL=bem_5.8.4.js.map